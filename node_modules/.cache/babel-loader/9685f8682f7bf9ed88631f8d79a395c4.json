{"ast":null,"code":"export default class HealerStrategy {\n  doAlgorithm(atackingUnit, target, targets, battleField, HP, support) {\n    console.log(\"Healer strategy \");\n    console.log(\"atacking unit\", atackingUnit);\n    console.log(\"chosen target\", target);\n    console.log(\"array of targets\", targets);\n    console.log(\"battlefield\", battleField);\n    console.log(\"HPs\", HP);\n    const copyHP = [...HP];\n    const _damage = battleField[atackingUnit]._damage;\n    battleField[target].doHPreduce(-_damage);\n    copyHP[target] = HP[target] + _damage;\n    return copyHP;\n  }\n\n  doTargetSelection(unit, battleField) {\n    console.log(\" Healer target selection\");\n    const copyBattleField = [...battleField];\n    if (unit._id >= 6) return copyBattleField.splice(6, 12);else return copyBattleField.splice(0, 6);\n  }\n\n}","map":{"version":3,"sources":["/home/kirill/WorkFolder/GameTS/my-app/src/strategy/classes/unitStrategy/HealerStrategy.ts"],"names":["HealerStrategy","doAlgorithm","atackingUnit","target","targets","battleField","HP","support","console","log","copyHP","_damage","doHPreduce","doTargetSelection","unit","copyBattleField","_id","splice"],"mappings":"AAEA,eAAe,MAAMA,cAAN,CAA0C;AAChDC,EAAAA,WAAP,CACEC,YADF,EAEEC,MAFF,EAGEC,OAHF,EAIEC,WAJF,EAKEC,EALF,EAMEC,OANF,EAOY;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BP,YAA7B;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BN,MAA7B;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCL,OAAhC;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BJ,WAA3B;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBH,EAAnB;AACA,UAAMI,MAAgB,GAAG,CAAC,GAAGJ,EAAJ,CAAzB;AAPU,UAQFK,OARE,GAQUN,WAAW,CAACH,YAAD,CARrB,CAQFS,OARE;AASVN,IAAAA,WAAW,CAACF,MAAD,CAAX,CAAoBS,UAApB,CAA+B,CAACD,OAAhC;AACAD,IAAAA,MAAM,CAACP,MAAD,CAAN,GAAiBG,EAAE,CAACH,MAAD,CAAF,GAAaQ,OAA9B;AACA,WAAOD,MAAP;AACD;;AACMG,EAAAA,iBAAP,CAAyBC,IAAzB,EAAqCT,WAArC,EAA4E;AAC1EG,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AAEA,UAAMM,eAAe,GAAG,CAAC,GAAGV,WAAJ,CAAxB;AACA,QAAIS,IAAI,CAACE,GAAL,IAAY,CAAhB,EAAmB,OAAOD,eAAe,CAACE,MAAhB,CAAuB,CAAvB,EAA0B,EAA1B,CAAP,CAAnB,KACK,OAAOF,eAAe,CAACE,MAAhB,CAAuB,CAAvB,EAA0B,CAA1B,CAAP;AACN;;AA3BsD","sourcesContent":["import IStrategy from \"../../interface/IConcreteStrategy\";\nimport Unit from \"../unit/Unit\";\nexport default class HealerStrategy implements IStrategy {\n  public doAlgorithm(\n    atackingUnit: number,\n    target: number,\n    targets: number[],\n    battleField: Array<Unit>,\n    HP: number[],\n    support:string\n  ): number[] {\n    console.log(\"Healer strategy \");\n    console.log(\"atacking unit\", atackingUnit);\n    console.log(\"chosen target\", target);\n    console.log(\"array of targets\", targets);\n    console.log(\"battlefield\", battleField);\n    console.log(\"HPs\", HP);\n    const copyHP: number[] = [...HP];\n    const { _damage } = battleField[atackingUnit];\n    battleField[target].doHPreduce(-_damage);\n    copyHP[target] = HP[target] + _damage;\n    return copyHP;\n  }\n  public doTargetSelection(unit: Unit, battleField: Array<Unit>): Array<Unit> {\n    console.log(\" Healer target selection\");\n\n    const copyBattleField = [...battleField];\n    if (unit._id >= 6) return copyBattleField.splice(6, 12);\n    else return copyBattleField.splice(0, 6);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}