{"ast":null,"code":"export const generateQueue = units => {\n  console.log(\"received\", units);\n  const sort = units.sort((a, b) => {\n    if (a._initiative < b._initiative) {\n      return 1;\n    }\n\n    return 0;\n  });\n  console.log(\"sorted\", sort);\n  var items = [{\n    name: \"Edward\",\n    value: 21\n  }, {\n    name: \"Sharpe\",\n    value: 37\n  }, {\n    name: \"And\",\n    value: 45\n  }, {\n    name: \"The\",\n    value: -12\n  }, {\n    name: \"Magnetic\"\n  }, {\n    name: \"Zeros\",\n    value: 37\n  }];\n  items.sort(function (a, b) {\n    if (a.value > b.value) {\n      return 1;\n    }\n\n    if (a.value < b.value) {\n      return -1;\n    } // a должно быть равным b\n\n\n    return 0;\n  });\n  console.log(items);\n};","map":{"version":3,"sources":["/home/kirill/WorkFolder/GameTS/my-app/src/Logic/queue.ts"],"names":["generateQueue","units","console","log","sort","a","b","_initiative","items","name","value"],"mappings":"AACA,OAAO,MAAMA,aAAkB,GAAIC,KAAD,IAAwB;AACxDC,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,KAAxB;AACA,QAAMG,IAAI,GAAGH,KAAK,CAACG,IAAN,CAAW,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAChC,QAAID,CAAC,CAACE,WAAF,GAAgBD,CAAC,CAACC,WAAtB,EAAmC;AACjC,aAAO,CAAP;AACD;;AACD,WAAO,CAAP;AACD,GALY,CAAb;AAMAL,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBC,IAAtB;AACA,MAAII,KAAK,GAAG,CACV;AAAEC,IAAAA,IAAI,EAAE,QAAR;AAAkBC,IAAAA,KAAK,EAAE;AAAzB,GADU,EAEV;AAAED,IAAAA,IAAI,EAAE,QAAR;AAAkBC,IAAAA,KAAK,EAAE;AAAzB,GAFU,EAGV;AAAED,IAAAA,IAAI,EAAE,KAAR;AAAeC,IAAAA,KAAK,EAAE;AAAtB,GAHU,EAIV;AAAED,IAAAA,IAAI,EAAE,KAAR;AAAeC,IAAAA,KAAK,EAAE,CAAC;AAAvB,GAJU,EAKV;AAAED,IAAAA,IAAI,EAAE;AAAR,GALU,EAMV;AAAEA,IAAAA,IAAI,EAAE,OAAR;AAAiBC,IAAAA,KAAK,EAAE;AAAxB,GANU,CAAZ;AAQAF,EAAAA,KAAK,CAACJ,IAAN,CAAW,UAASC,CAAT,EAAmBC,CAAnB,EAA6B;AACtC,QAAID,CAAC,CAACK,KAAF,GAAUJ,CAAC,CAACI,KAAhB,EAAuB;AACrB,aAAO,CAAP;AACD;;AACD,QAAIL,CAAC,CAACK,KAAF,GAAUJ,CAAC,CAACI,KAAhB,EAAuB;AACrB,aAAO,CAAC,CAAR;AACD,KANqC,CAOtC;;;AACA,WAAO,CAAP;AACD,GATD;AAUAR,EAAAA,OAAO,CAACC,GAAR,CAAYK,KAAZ;AACD,CA5BM","sourcesContent":["import Unit from \"../strategy/classes/unit/Unit\";\nexport const generateQueue: any = (units: Array<Unit>) => {\n  console.log(\"received\", units);\n  const sort = units.sort((a, b) => {\n    if (a._initiative < b._initiative) {\n      return 1;\n    }\n    return 0;\n  });\n  console.log(\"sorted\", sort);\n  var items = [\n    { name: \"Edward\", value: 21 },\n    { name: \"Sharpe\", value: 37 },\n    { name: \"And\", value: 45 },\n    { name: \"The\", value: -12 },\n    { name: \"Magnetic\" },\n    { name: \"Zeros\", value: 37 }\n  ];\n  items.sort(function(a:object, b:object) {\n    if (a.value > b.value) {\n      return 1;\n    }\n    if (a.value < b.value) {\n      return -1;\n    }\n    // a должно быть равным b\n    return 0;\n  });\n  console.log(items);\n};\n"]},"metadata":{},"sourceType":"module"}