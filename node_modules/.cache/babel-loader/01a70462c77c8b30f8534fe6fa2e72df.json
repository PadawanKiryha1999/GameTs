{"ast":null,"code":"import _slicedToArray from \"/home/kirill/WorkFolder/GameTS/my-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/kirill/WorkFolder/GameTS/my-app/src/App.tsx\";\nimport React from \"react\";\nimport \"./App.css\"; // import { CenterPart } from \"./page/CenterPart\";\n\nimport { RightPart } from \"./page/RightPart\";\nimport { UnitsArray } from \"./Logic/GenerateUnits\";\nimport { useState, useEffect } from \"react\";\nimport { QueueUI } from \"../src/page/QueueUI\";\nimport { UnitUI } from \"../src/page/UnitUI\";\nimport { generateQueue } from \"../src/Logic/Generatequeue\";\n\nconst App = () => {\n  const unitsHP = UnitsArray.map(unit => {\n    return unit._HP;\n  });\n  const getQueue = generateQueue(UnitsArray);\n\n  const _useState = useState(getQueue),\n        _useState2 = _slicedToArray(_useState, 2),\n        queue = _useState2[0],\n        setQueue = _useState2[1];\n\n  useEffect(() => {\n    const unit = queue[0];\n\n    if (queue.length == 1 && queue[0]._HP <= 0) {\n      setQueue(generateQueue(UnitsArray, \"new turn\"));\n    } else {\n      if (unit._HP <= 0) {\n        console.log(\"vmer\");\n        const nextQueue = [...queue];\n        nextQueue.shift();\n        setQueue(nextQueue);\n      } else {\n        const targetsForAction = unit.doSelect(UnitsArray);\n        console.log(\"ACTION UNIT\", unit._id);\n        console.log(\"array units under atack\", targetsForAction);\n        const a = [];\n        const idTargets = targetsForAction.map(unit => {\n          a.push(unit._id);\n          return unit._id;\n        });\n        setTarget(idTargets);\n      }\n    }\n  }, [queue]);\n\n  const _useState3 = useState(),\n        _useState4 = _slicedToArray(_useState3, 2),\n        target = _useState4[0],\n        setTarget = _useState4[1];\n\n  const _useState5 = useState(unitsHP),\n        _useState6 = _slicedToArray(_useState5, 2),\n        HP = _useState6[0],\n        setHP = _useState6[1];\n\n  const handleDefenseClick = index => {\n    const nextQueue = [...queue];\n    nextQueue.shift();\n    setQueue(nextQueue);\n\n    if (nextQueue.length === 0) {\n      console.log(\"new queue\");\n      setQueue(generateQueue(UnitsArray, \"new turn\"));\n    }\n\n    return 1;\n  };\n\n  const handleClick = index => {\n    // (index===0) ? console.log(index) : console.log(index);\n    const selectedUnit = queue[0];\n    const newHP = selectedUnit.doAction(selectedUnit._id, index, target, UnitsArray, HP);\n    console.log(newHP);\n    setHP(newHP); // const hps = [...HP];\n    // hps[index] = HP[index] - UnitsArray[index].doHPreduce(1, 1);\n    // setHP(hps);\n\n    const nextQueue = [...queue];\n    nextQueue.shift();\n    setQueue(nextQueue);\n\n    if (nextQueue.length === 0) {\n      console.log(\"new queue\");\n      setQueue(generateQueue(UnitsArray, \"new turn\"));\n    }\n\n    return 1;\n  };\n\n  const renderLeftPart = () => {\n    const unitsArrayUI = queue.map((unit, index) => {\n      return React.createElement(QueueUI, {\n        HP: HP[unit._id],\n        key: index,\n        currentUnit: unit,\n        currentIndex: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      });\n    });\n    return unitsArrayUI;\n  };\n\n  const isAtcaked = (index, unit) => {\n    // if (target.indexof(index)) return true;\n    // else return false;\n    if (target === undefined) console.log(\"first render\");else {\n      if (target.indexOf(index) === -1 || HP[index] <= 0) {\n        return false;\n      } else return true;\n    }\n  };\n\n  console.log(\"array of index utacked unit\", target);\n\n  const renderCenterPart = () => {\n    const unitsArrayUI = UnitsArray.map((unit, index) => {\n      if (index === 5) {\n        return React.createElement(React.Fragment, {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, React.createElement(UnitUI, {\n          HP: HP[index],\n          currentUnit: unit,\n          currentIndex: index,\n          underAtack: isAtcaked(index, unit),\n          isActive: queue[0]._id === index,\n          onClick: () => {\n            handleClick(index);\n          },\n          onDefenseClick: () => {\n            handleDefenseClick(index);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"border\",\n          key: 100,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        }));\n      }\n\n      return React.createElement(UnitUI, {\n        HP: HP[index],\n        key: index,\n        currentUnit: unit,\n        currentIndex: index,\n        underAtack: isAtcaked(index, unit),\n        onClick: () => {\n          handleClick(index);\n        },\n        onDefenseClick: () => {\n          handleDefenseClick(index);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      });\n    });\n    return React.createElement(\"div\", {\n      className: \"battleField\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, unitsArrayUI);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"app\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"left-part\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, renderLeftPart()), \";\", React.createElement(\"div\", {\n    className: \"battleField\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, renderCenterPart()), \";\", React.createElement(RightPart, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/kirill/WorkFolder/GameTS/my-app/src/App.tsx"],"names":["React","RightPart","UnitsArray","useState","useEffect","QueueUI","UnitUI","generateQueue","App","unitsHP","map","unit","_HP","getQueue","queue","setQueue","length","console","log","nextQueue","shift","targetsForAction","doSelect","_id","a","idTargets","push","setTarget","target","HP","setHP","handleDefenseClick","index","handleClick","selectedUnit","newHP","doAction","renderLeftPart","unitsArrayUI","isAtcaked","undefined","indexOf","renderCenterPart"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\n// import { CenterPart } from \"./page/CenterPart\";\nimport { RightPart } from \"./page/RightPart\";\nimport { LeftPart } from \"./page/LeftPart\";\nimport { CenterPartV2 } from \"./page/CenterPartV2\";\nimport { UnitsArray } from \"./Logic/GenerateUnits\";\nimport Unit from \"../src/strategy/classes/unit/Unit\";\nimport { useState, useEffect } from \"react\";\nimport { QueueUI } from \"../src/page/QueueUI\";\nimport { UnitUI } from \"../src/page/UnitUI\";\nimport { generateQueue } from \"../src/Logic/Generatequeue\";\nimport ArcherStrategy from \"./strategy/classes/unitStrategy/ArcherStrategy\";\nimport { number } from \"prop-types\";\n\nconst App: React.FC = () => {\n  const unitsHP: number[] = UnitsArray.map(unit => {\n    return unit._HP;\n  });\n  const getQueue: Array<Unit> = generateQueue(UnitsArray);\n  const [queue, setQueue] = useState(getQueue);\n\n  useEffect(() => {\n    const unit = queue[0];\n    if (queue.length == 1 && queue[0]._HP <= 0) {\n      setQueue(generateQueue(UnitsArray, \"new turn\"));\n    } else {\n      if (unit._HP <= 0) {\n        console.log(\"vmer\");\n        const nextQueue = [...queue];\n        nextQueue.shift();\n        setQueue(nextQueue);\n      } else {\n        const targetsForAction: Array<Unit> = unit.doSelect(UnitsArray);\n        console.log(\"ACTION UNIT\", unit._id);\n        console.log(\"array units under atack\", targetsForAction);\n        const a: number[] = [];\n        const idTargets: number[] = targetsForAction.map(unit => {\n          a.push(unit._id);\n          return unit._id;\n        });\n        setTarget(idTargets);\n      }\n    }\n  }, [queue]);\n  const [target, setTarget] = useState();\n  const [HP, setHP] = useState(unitsHP);\n\n  const handleDefenseClick = (index: number): number => {\n    const nextQueue = [...queue];\n    nextQueue.shift();\n    setQueue(nextQueue);\n    if (nextQueue.length === 0) {\n      console.log(\"new queue\");\n      setQueue(generateQueue(UnitsArray, \"new turn\"));\n    }\n\n    return 1;\n  };\n  const handleClick = (index: number): number => {\n    // (index===0) ? console.log(index) : console.log(index);\n    const selectedUnit: Unit = queue[0];\n    const newHP: number[] = selectedUnit.doAction(\n      selectedUnit._id,\n      index,\n      target,\n      UnitsArray,\n      HP\n    );\n    console.log(newHP);\n    setHP(newHP);\n    // const hps = [...HP];\n    // hps[index] = HP[index] - UnitsArray[index].doHPreduce(1, 1);\n    // setHP(hps);\n    const nextQueue = [...queue];\n    nextQueue.shift();\n    setQueue(nextQueue);\n    if (nextQueue.length === 0) {\n      console.log(\"new queue\");\n      setQueue(generateQueue(UnitsArray, \"new turn\"));\n    }\n\n    return 1;\n  };\n\n  type props = {\n    index: number;\n  };\n\n  const renderLeftPart = () => {\n    const unitsArrayUI: any = queue.map((unit, index) => {\n      return (\n        <QueueUI\n          HP={HP[unit._id]}\n          key={index}\n          currentUnit={unit}\n          currentIndex={index}\n        />\n      );\n    });\n\n    return unitsArrayUI;\n  };\n  const isAtcaked: any = (index: number, unit: Unit) => {\n    // if (target.indexof(index)) return true;\n    // else return false;\n    if (target === undefined) console.log(\"first render\");\n    else {\n      if (target.indexOf(index) === -1 || HP[index] <= 0) {\n        return false;\n      } else return true;\n    }\n  };\n\n  console.log(\"array of index utacked unit\", target);\n\n  const renderCenterPart = () => {\n    const unitsArrayUI: any = UnitsArray.map((unit, index) => {\n      if (index === 5) {\n        return (\n          <React.Fragment key={index}>\n            <UnitUI\n              HP={HP[index]}\n              currentUnit={unit}\n              currentIndex={index}\n              underAtack={isAtcaked(index, unit)}\n              isActive={queue[0]._id===index }\n              onClick={() => {\n                handleClick(index);\n              }}\n              onDefenseClick={() => {\n                handleDefenseClick(index);\n              }}\n            />\n            <div className=\"border\" key={100}></div>\n          </React.Fragment>\n        );\n      }\n      return (\n        <UnitUI\n          HP={HP[index]}\n          key={index}\n          currentUnit={unit}\n          currentIndex={index}\n          underAtack={isAtcaked(index, unit)}\n          onClick={() => {\n            handleClick(index);\n          }}\n          onDefenseClick={() => {\n            handleDefenseClick(index);\n          }}\n\n        />\n      );\n    });\n\n    return <div className=\"battleField\">{unitsArrayUI}</div>;\n  };\n\n  return (\n    <div className=\"app\">\n      {/* <LeftPart\n        units={UnitsArray}\n        onClick={() => {\n          handleClick();\n        }}\n      /> */}\n      <div className=\"left-part\">{renderLeftPart()}</div>;\n      {/* <CenterPartV2 units={UnitsArray} /> */}\n      <div className=\"battleField\">{renderCenterPart()}</div>;\n      <RightPart />\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}