{"ast":null,"code":"export default class Unit {\n  constructor(strategy) {\n    this._unitType = void 0;\n    this._HP = void 0;\n    this._damage = void 0;\n    this._initiative = void 0;\n    this._actionType = void 0;\n    this._imgPath = void 0;\n    this.strategy = void 0;\n    this.strategy = strategy;\n  } // abstract _HP: number;\n\n\n  doDefenseAction(incomingDamage, curentHP) {\n    // const reducedIncomingDamage: number = Math.ceil(incomingDamage * 0.5);\n    // this._HP = curentHP - reducedIncomingDamage;\n    console.log(\"defense\");\n  }\n\n  doHPreduce(incomingDamage, curentHP) {\n    // if (incomingDamage >= curentHP) {\n    //   this._HP = 0;\n    // } else {\n    //   this._HP = curentHP - incomingDamage;\n    // }\n    console.log(\"HP reduce\");\n  }\n\n  setAgentTarget() {}\n\n  showInfo() {\n    console.log(this);\n  }\n\n  doAction(position) {\n    this.strategy.doAlgorithm(position);\n  }\n\n  doSelect() {\n    this.strategy.doTargetSelection();\n  }\n\n}","map":{"version":3,"sources":["/home/kirill/WorkFolder/GameTS/my-app/src/strategy/classes/unitStrategy/Unit.ts"],"names":["Unit","constructor","strategy","_unitType","_HP","_damage","_initiative","_actionType","_imgPath","doDefenseAction","incomingDamage","curentHP","console","log","doHPreduce","setAgentTarget","showInfo","doAction","position","doAlgorithm","doSelect","doTargetSelection"],"mappings":"AAEA,eAAe,MAAeA,IAAf,CAAqC;AASlDC,EAAAA,WAAW,CAACC,QAAD,EAAsB;AAAA,SARxBC,SAQwB;AAAA,SAPxBC,GAOwB;AAAA,SANxBC,OAMwB;AAAA,SALxBC,WAKwB;AAAA,SAJxBC,WAIwB;AAAA,SAHxBC,QAGwB;AAAA,SADzBN,QACyB;AAC/B,SAAKA,QAAL,GAAgBA,QAAhB;AACD,GAXiD,CAYlD;;;AAEAO,EAAAA,eAAe,CAACC,cAAD,EAAyBC,QAAzB,EAA2C;AACxD;AACA;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD;;AACDC,EAAAA,UAAU,CAACJ,cAAD,EAAyBC,QAAzB,EAA2C;AACnD;AACA;AACA;AACA;AACA;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACD;;AACDE,EAAAA,cAAc,GAAG,CAAE;;AACnBC,EAAAA,QAAQ,GAAG;AACTJ,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACD;;AAEMI,EAAAA,QAAP,CAAgBC,QAAhB,EAAwC;AACtC,SAAKhB,QAAL,CAAciB,WAAd,CAA0BD,QAA1B;AACD;;AACME,EAAAA,QAAP,GAAwB;AACtB,SAAKlB,QAAL,CAAcmB,iBAAd;AACD;;AArCiD","sourcesContent":["import IStrategy from \"../../interface/IStrategy\";\nimport IUnit from \"../../interface/IUnit\";\nexport default abstract class Unit implements IUnit {\n  abstract _unitType: string;\n  abstract _HP: number;\n  abstract _damage: number;\n  abstract _initiative: number;\n  abstract _actionType: void;\n  abstract _imgPath: string;\n  \n  private strategy: IStrategy;\n  constructor(strategy: IStrategy) {\n    this.strategy = strategy;\n  }\n  // abstract _HP: number;\n\n  doDefenseAction(incomingDamage: number, curentHP: number) {\n    // const reducedIncomingDamage: number = Math.ceil(incomingDamage * 0.5);\n    // this._HP = curentHP - reducedIncomingDamage;\n    console.log(\"defense\");\n  }\n  doHPreduce(incomingDamage: number, curentHP: number) {\n    // if (incomingDamage >= curentHP) {\n    //   this._HP = 0;\n    // } else {\n    //   this._HP = curentHP - incomingDamage;\n    // }\n    console.log(\"HP reduce\");\n  }\n  setAgentTarget() {}\n  showInfo() {\n    console.log(this);\n  }\n\n  public doAction(position: number): void {\n    this.strategy.doAlgorithm(position);\n  }\n  public doSelect(): void {\n    this.strategy.doTargetSelection();\n  }\n}\n"]},"metadata":{},"sourceType":"module"}