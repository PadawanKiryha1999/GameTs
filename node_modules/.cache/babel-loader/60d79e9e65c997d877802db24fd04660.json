{"ast":null,"code":"export default class Unit {\n  constructor(strategy) {\n    this._unitType = void 0;\n    this._HP = void 0;\n    this._damage = void 0;\n    this._initiative = void 0;\n    this._actionType = void 0;\n    this._imgPath = void 0;\n    this._id = void 0;\n    this.strategy = void 0;\n    this.strategy = strategy;\n  } // abstract _HP: number;\n\n\n  doDefenseAction(incomingDamage, curentHP) {\n    // const reducedIncomingDamage: number = Math.ceil(incomingDamage * 0.5);\n    // this._HP = curentHP - reducedIncomingDamage;\n    console.log(\"defense\");\n  }\n\n  doHPreduce(incomingDamage, curentHP) {\n    // if (incomingDamage >= curentHP) {\n    //   this._HP = 0;\n    // } else {\n    //   this._HP = curentHP - incomingDamage;\n    // }\n    this._HP -= 30;\n    if (this._HP < 0) this._HP = 0;\n    return 30;\n  }\n\n  setAgentTarget() {// const atackType: string = this._unitType;\n    // if (\n    //   atackType === \"mage\" ||\n    //   atackType === \"range\" ||\n    //   atackType == \"paralyazer\"\n    // )\n    //   console.log(1);\n    // if (atackType === \"melee\") console.log(2);\n    // if (atackType === \"healer\") console.log(3);\n  }\n\n  showInfo() {\n    console.log(this);\n  }\n\n  getHP() {\n    return this._HP;\n  }\n\n  doAction(position) {\n    this.strategy.doAlgorithm(position);\n  }\n\n  doSelect() {\n    this.strategy.doTargetSelection();\n  }\n\n}","map":{"version":3,"sources":["/home/kirill/WorkFolder/GameTS/my-app/src/strategy/classes/unit/Unit.ts"],"names":["Unit","constructor","strategy","_unitType","_HP","_damage","_initiative","_actionType","_imgPath","_id","doDefenseAction","incomingDamage","curentHP","console","log","doHPreduce","setAgentTarget","showInfo","getHP","doAction","position","doAlgorithm","doSelect","doTargetSelection"],"mappings":"AAEA,eAAe,MAAeA,IAAf,CAAqC;AAUlDC,EAAAA,WAAW,CAACC,QAAD,EAAsB;AAAA,SATxBC,SASwB;AAAA,SARxBC,GAQwB;AAAA,SAPxBC,OAOwB;AAAA,SANxBC,WAMwB;AAAA,SALxBC,WAKwB;AAAA,SAJxBC,QAIwB;AAAA,SAHxBC,GAGwB;AAAA,SADzBP,QACyB;AAC/B,SAAKA,QAAL,GAAgBA,QAAhB;AACD,GAZiD,CAalD;;;AAEAQ,EAAAA,eAAe,CAACC,cAAD,EAAyBC,QAAzB,EAA2C;AACxD;AACA;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD;;AACDC,EAAAA,UAAU,CAACJ,cAAD,EAAyBC,QAAzB,EAA2C;AACnD;AACA;AACA;AACA;AACA;AACA,SAAKR,GAAL,IAAY,EAAZ;AACA,QAAI,KAAKA,GAAL,GAAW,CAAf,EAAkB,KAAKA,GAAL,GAAW,CAAX;AAClB,WAAO,EAAP;AACD;;AACDY,EAAAA,cAAc,GAAG,CACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;AACDC,EAAAA,QAAQ,GAAG;AACTJ,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACD;;AAEDI,EAAAA,KAAK,GAAG;AACN,WAAO,KAAKd,GAAZ;AACD;;AAEMe,EAAAA,QAAP,CAAgBC,QAAhB,EAAwC;AACtC,SAAKlB,QAAL,CAAcmB,WAAd,CAA0BD,QAA1B;AACD;;AACME,EAAAA,QAAP,GAAwB;AACtB,SAAKpB,QAAL,CAAcqB,iBAAd;AACD;;AAtDiD","sourcesContent":["import IStrategy from \"../../interface/IConcreteStrategy\";\nimport IUnit from \"../../interface/IUnit\";\nexport default abstract class Unit implements IUnit {\n  abstract _unitType: string;\n  abstract _HP: number;\n  abstract _damage: number;\n  abstract _initiative: number;\n  abstract _actionType: void;\n  abstract _imgPath: string;\n  abstract _id: number;\n\n  private strategy: IStrategy;\n  constructor(strategy: IStrategy) {\n    this.strategy = strategy;\n  }\n  // abstract _HP: number;\n\n  doDefenseAction(incomingDamage: number, curentHP: number) {\n    // const reducedIncomingDamage: number = Math.ceil(incomingDamage * 0.5);\n    // this._HP = curentHP - reducedIncomingDamage;\n    console.log(\"defense\");\n  }\n  doHPreduce(incomingDamage: number, curentHP: number) {\n    // if (incomingDamage >= curentHP) {\n    //   this._HP = 0;\n    // } else {\n    //   this._HP = curentHP - incomingDamage;\n    // }\n    this._HP -= 30;\n    if (this._HP < 0) this._HP = 0;\n    return 30;\n  }\n  setAgentTarget() {\n    // const atackType: string = this._unitType;\n    // if (\n    //   atackType === \"mage\" ||\n    //   atackType === \"range\" ||\n    //   atackType == \"paralyazer\"\n    // )\n    //   console.log(1);\n    // if (atackType === \"melee\") console.log(2);\n    // if (atackType === \"healer\") console.log(3);\n  }\n  showInfo() {\n    console.log(this);\n  }\n\n  getHP() {\n    return this._HP;\n  }\n\n  public doAction(position: number): void {\n    this.strategy.doAlgorithm(position);\n  }\n  public doSelect(): void {\n    this.strategy.doTargetSelection();\n  }\n}\n"]},"metadata":{},"sourceType":"module"}