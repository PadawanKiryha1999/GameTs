{"ast":null,"code":"export default class Unit {\n  constructor(strategy) {\n    this._unitType = void 0;\n    this._HP = void 0;\n    this._damage = void 0;\n    this._initiative = void 0;\n    this._actionType = void 0;\n    this._imgPath = void 0;\n    this._id = void 0;\n    this.strategy = void 0;\n    this.strategy = strategy;\n  }\n\n  doHPreduce(incomingDamage, isProtected) {\n    if (isProtected) incomingDamage = incomingDamage * 0.5;\n\n    if (this._HP > incomingDamage) {\n      this._HP -= incomingDamage;\n    } else {\n      this._HP = 0;\n    }\n\n    return this._HP;\n  }\n\n  setAgentTarget() {\n    console.log(\"lala\");\n  }\n\n  showInfo() {\n    console.log(this);\n  }\n\n  getHP() {\n    return this._HP;\n  }\n\n  doHPUIReduce(HPUI, incomingDamage, isProtected) {\n    console.log(\"Its HPReduce UI\");\n    console.log(\"Hp before atack\", HPUI);\n    const damage;\n    const reducedDamage = incomingDamage * 0.5;\n    if (isProtected) if (incomingDamage >= HPUI) {\n      HPUI = 0;\n    } else {\n      HPUI -= incomingDamage;\n    }\n    console.log(\"Hp after atack\", HPUI);\n    return HPUI;\n  }\n\n  doAction(atackingUnit, target, targets, battleField, HP, isProtected) {\n    return this.strategy.doAlgorithm(atackingUnit, target, targets, battleField, HP, isProtected);\n  }\n\n  doSelect(battleField) {\n    return this.strategy.doTargetSelection(this, battleField);\n  }\n\n}","map":{"version":3,"sources":["/home/kirill/WorkFolder/GameTS/my-app/src/strategy/classes/unit/Unit.ts"],"names":["Unit","constructor","strategy","_unitType","_HP","_damage","_initiative","_actionType","_imgPath","_id","doHPreduce","incomingDamage","isProtected","setAgentTarget","console","log","showInfo","getHP","doHPUIReduce","HPUI","damage","reducedDamage","doAction","atackingUnit","target","targets","battleField","HP","doAlgorithm","doSelect","doTargetSelection"],"mappings":"AAEA,eAAe,MAAeA,IAAf,CAAqC;AAUlDC,EAAAA,WAAW,CAACC,QAAD,EAAsB;AAAA,SATxBC,SASwB;AAAA,SARxBC,GAQwB;AAAA,SAPxBC,OAOwB;AAAA,SANxBC,WAMwB;AAAA,SALxBC,WAKwB;AAAA,SAJxBC,QAIwB;AAAA,SAHxBC,GAGwB;AAAA,SADzBP,QACyB;AAC/B,SAAKA,QAAL,GAAgBA,QAAhB;AACD;;AAEDQ,EAAAA,UAAU,CAACC,cAAD,EAAyBC,WAAzB,EAAgD;AACxD,QAAIA,WAAJ,EAAiBD,cAAc,GAAGA,cAAc,GAAG,GAAlC;;AACjB,QAAI,KAAKP,GAAL,GAAWO,cAAf,EAA+B;AAC7B,WAAKP,GAAL,IAAYO,cAAZ;AACD,KAFD,MAEO;AACL,WAAKP,GAAL,GAAW,CAAX;AACD;;AAED,WAAO,KAAKA,GAAZ;AACD;;AACDS,EAAAA,cAAc,GAAG;AACfC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACD;;AACDC,EAAAA,QAAQ,GAAG;AACTF,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACD;;AAEDE,EAAAA,KAAK,GAAG;AACN,WAAO,KAAKb,GAAZ;AACD;;AAEDc,EAAAA,YAAY,CAACC,IAAD,EAAeR,cAAf,EAAuCC,WAAvC,EAA8D;AACxEE,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BI,IAA/B;AACA,UAAMC,MAAN;AACA,UAAMC,aAAqB,GAAGV,cAAc,GAAG,GAA/C;AACA,QAAGC,WAAH,EAEA,IAAID,cAAc,IAAIQ,IAAtB,EAA4B;AAC1BA,MAAAA,IAAI,GAAG,CAAP;AACD,KAFD,MAEO;AACLA,MAAAA,IAAI,IAAIR,cAAR;AACD;AACDG,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BI,IAA9B;AACA,WAAOA,IAAP;AACD;;AAEMG,EAAAA,QAAP,CACEC,YADF,EAEEC,MAFF,EAGEC,OAHF,EAIEC,WAJF,EAKEC,EALF,EAMEf,WANF,EAOY;AACV,WAAO,KAAKV,QAAL,CAAc0B,WAAd,CACLL,YADK,EAELC,MAFK,EAGLC,OAHK,EAILC,WAJK,EAKLC,EALK,EAMLf,WANK,CAAP;AAQD;;AACMiB,EAAAA,QAAP,CAAgBH,WAAhB,EAAuD;AACrD,WAAO,KAAKxB,QAAL,CAAc4B,iBAAd,CAAgC,IAAhC,EAAsCJ,WAAtC,CAAP;AACD;;AAtEiD","sourcesContent":["import IStrategy from \"../../interface/IConcreteStrategy\";\nimport IUnit from \"../../interface/IUnit\";\nexport default abstract class Unit implements IUnit {\n  abstract _unitType: string;\n  abstract _HP: number;\n  abstract _damage: number;\n  abstract _initiative: number;\n  abstract _actionType: void;\n  abstract _imgPath: string;\n  abstract _id: number;\n\n  private strategy: IStrategy;\n  constructor(strategy: IStrategy) {\n    this.strategy = strategy;\n  }\n\n  doHPreduce(incomingDamage: number, isProtected?: boolean) {\n    if (isProtected) incomingDamage = incomingDamage * 0.5;\n    if (this._HP > incomingDamage) {\n      this._HP -= incomingDamage;\n    } else {\n      this._HP = 0;\n    }\n\n    return this._HP;\n  }\n  setAgentTarget() {\n    console.log(\"lala\");\n  }\n  showInfo() {\n    console.log(this);\n  }\n\n  getHP() {\n    return this._HP;\n  }\n\n  doHPUIReduce(HPUI: number, incomingDamage: number, isProtected?: boolean) {\n    console.log(\"Its HPReduce UI\");\n    console.log(\"Hp before atack\", HPUI);\n    const damage: number;\n    const reducedDamage: number = incomingDamage * 0.5;\n    if(isProtected)\n    \n    if (incomingDamage >= HPUI) {\n      HPUI = 0;\n    } else {\n      HPUI -= incomingDamage;\n    }\n    console.log(\"Hp after atack\", HPUI);\n    return HPUI;\n  }\n\n  public doAction(\n    atackingUnit: number,\n    target: number,\n    targets: number[],\n    battleField: Array<Unit>,\n    HP: number[],\n    isProtected?: boolean[]\n  ): number[] {\n    return this.strategy.doAlgorithm(\n      atackingUnit,\n      target,\n      targets,\n      battleField,\n      HP,\n      isProtected\n    );\n  }\n  public doSelect(battleField: Array<Unit>): Array<Unit> {\n    return this.strategy.doTargetSelection(this, battleField);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}