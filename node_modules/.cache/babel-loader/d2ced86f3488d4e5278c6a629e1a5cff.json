{"ast":null,"code":"import _slicedToArray from \"/home/kirill/WorkFolder/GameTS/my-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/kirill/WorkFolder/GameTS/my-app/src/page/UnitUI.tsx\";\nimport React, { useState } from \"react\";\nimport defense from \"../../src/img/18-512.png\";\nimport \"./CenterPart.css\";\nexport const UnitUI = props => {\n  const _useState = useState(props.currentUnit._HP),\n        _useState2 = _slicedToArray(_useState, 2),\n        currentHP = _useState2[0],\n        setCurrentHP = _useState2[1];\n\n  const hp = props.currentUnit.getHP();\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, props.underAtack ? React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, props.isActive ? React.createElement(\"div\", {\n    className: \"cell-active\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"cell__unit-info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    onClick: () => {\n      console.log(props.currentUnit);\n    },\n    className: \"cell__unit-info__image\",\n    src: props.currentUnit._imgPath,\n    alt: \"img\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"cell__unit-info__options\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"cell__unit-info__options__defense\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"defense-button\",\n    disabled: !props.isActive,\n    onClick: () => {\n      props.onDefenseClick();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: defense,\n    width: 40,\n    alt: \"img\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }))))), React.createElement(\"div\", {\n    className: \"cell__HP\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, props.HP), props.hexed ? React.createElement(\"div\", {\n    className: \"hexed\",\n    style: {\n      color: \"pink\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"hexed\") : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), props.protected ? React.createElement(\"div\", {\n    className: \"protected\",\n    style: {\n      color: \"pink\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Protected\") : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  })) : React.createElement(\"div\", {\n    className: \"cell\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"cell__unit-info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    onClick: () => {\n      console.log(props.currentUnit);\n    },\n    className: \"cell__unit-info__image\",\n    src: props.currentUnit._imgPath,\n    alt: \"img\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"cell__unit-info__options\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"cell__unit-info__options__defense\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"defense-button\",\n    disabled: !props.isActive,\n    onClick: () => {\n      props.onDefenseClick();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: defense,\n    width: 40,\n    alt: \"img\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }))))), React.createElement(\"div\", {\n    className: \"cell__HP\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, props.HP), props.hexed ? React.createElement(\"div\", {\n    className: \"hexed\",\n    style: {\n      color: \"pink\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, \"hexed\") : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }), props.protected ? React.createElement(\"div\", {\n    className: \"protected\",\n    style: {\n      color: \"pink\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, \"Protected\") : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }))) // <div className=\"cell-atacked\">\n  //   <div className=\"cell__unit-info\">\n  //     <img\n  //       onClick={() => {\n  //         props.onClick();\n  //       }}\n  //       className=\"cell__unit-info__image\"\n  //       src={props.currentUnit._imgPath}\n  //       alt=\"img\"\n  //     />\n  //     <div className=\"cell__unit-info__options\">\n  //       <div className=\"cell__unit-info__options__defense\">\n  //         <button\n  //           className=\"defense-button\"\n  //           disabled={!props.isActive}\n  //           onClick={() => {\n  //             props.onDefenseClick();\n  //           }}\n  //         >\n  //           <img src={defense} width={40} alt=\"img\" />\n  //         </button>\n  //       </div>\n  //     </div>\n  //   </div>\n  //   <div className=\"cell__HP\">\n  //     {/* <progress\n  //     className=\"cell__HP__bar\"\n  //     value={props.HP}\n  //     // value={currentUnit.getHP()}\n  //     max={props.currentUnit._HP}\n  //   ></progress> */}\n  //     {props.HP}\n  //   </div>\n  //   {props.isActive ? (\n  //     <div className=\"activeUnit\" style={{ color: \"yellow\" }}>\n  //       Active\n  //     </div>\n  //   ) : (\n  //     <div></div>\n  //   )}\n  //   {props.hexed ? (\n  //     <div className=\"hexed\" style={{ color: \"pink\" }}>\n  //       hexed\n  //     </div>\n  //   ) : (\n  //     <div></div>\n  //   )}\n  //   {props.protected ? (\n  //     <div className=\"protected\" style={{ color: \"pink\" }}>\n  //       Protected\n  //     </div>\n  //   ) : (\n  //     <div></div>\n  //   )}\n  // </div>\n  : React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }, props.isActive ? React.createElement(\"div\", {\n    className: \"cell-active\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"cell__unit-info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    onClick: () => {\n      console.log(props.currentUnit);\n    },\n    className: \"cell__unit-info__image\",\n    src: props.currentUnit._imgPath,\n    alt: \"img\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"cell__unit-info__options\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"cell__unit-info__options__defense\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"defense-button\",\n    disabled: !props.isActive,\n    onClick: () => {\n      props.onDefenseClick();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: defense,\n    width: 40,\n    alt: \"img\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211\n    },\n    __self: this\n  }))))), React.createElement(\"div\", {\n    className: \"cell__HP\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  }, props.HP), props.hexed ? React.createElement(\"div\", {\n    className: \"hexed\",\n    style: {\n      color: \"pink\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227\n    },\n    __self: this\n  }, \"hexed\") : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231\n    },\n    __self: this\n  }), props.protected ? React.createElement(\"div\", {\n    className: \"protected\",\n    style: {\n      color: \"pink\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234\n    },\n    __self: this\n  }, \"Protected\") : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238\n    },\n    __self: this\n  })) : React.createElement(\"div\", {\n    className: \"cell\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"cell__unit-info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    onClick: () => {\n      console.log(props.currentUnit);\n    },\n    className: \"cell__unit-info__image\",\n    src: props.currentUnit._imgPath,\n    alt: \"img\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"cell__unit-info__options\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"cell__unit-info__options__defense\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"defense-button\",\n    disabled: !props.isActive,\n    onClick: () => {\n      props.onDefenseClick();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: defense,\n    width: 40,\n    alt: \"img\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261\n    },\n    __self: this\n  }))))), React.createElement(\"div\", {\n    className: \"cell__HP\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266\n    },\n    __self: this\n  }, props.HP), props.hexed ? React.createElement(\"div\", {\n    className: \"hexed\",\n    style: {\n      color: \"pink\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277\n    },\n    __self: this\n  }, \"hexed\") : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281\n    },\n    __self: this\n  }), props.protected ? React.createElement(\"div\", {\n    className: \"protected\",\n    style: {\n      color: \"pink\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284\n    },\n    __self: this\n  }, \"Protected\") : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288\n    },\n    __self: this\n  }))));\n};","map":{"version":3,"sources":["/home/kirill/WorkFolder/GameTS/my-app/src/page/UnitUI.tsx"],"names":["React","useState","defense","UnitUI","props","currentUnit","_HP","currentHP","setCurrentHP","hp","getHP","underAtack","isActive","console","log","_imgPath","onDefenseClick","HP","hexed","color","protected"],"mappings":"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","sourcesContent":["import React, { FunctionComponent, useEffect, useState } from \"react\";\nimport Unit from \"../strategy/classes/unit/Unit\";\nimport defense from \"../../src/img/18-512.png\";\nimport \"./CenterPart.css\";\n\ninterface UnitUIProps {\n  currentIndex: number;\n  currentUnit: Unit;\n  onClick: any;\n  HP: number;\n  underAtack: boolean;\n  onDefenseClick: any;\n  isActive: boolean;\n  hexed: boolean;\n  protected: boolean;\n}\nexport const UnitUI: FunctionComponent<UnitUIProps> = props => {\n  const [currentHP, setCurrentHP] = useState(props.currentUnit._HP);\n  const hp = props.currentUnit.getHP();\n\n  return (\n    <React.Fragment>\n      {props.underAtack ? (\n        <React.Fragment>\n          {props.isActive ? (\n            <div className=\"cell-active\">\n              <div className=\"cell__unit-info\">\n                <img\n                  onClick={() => {\n                    console.log(props.currentUnit);\n                  }}\n                  className=\"cell__unit-info__image\"\n                  src={props.currentUnit._imgPath}\n                  alt=\"img\"\n                />\n                <div className=\"cell__unit-info__options\">\n                  <div className=\"cell__unit-info__options__defense\">\n                    <button\n                      className=\"defense-button\"\n                      disabled={!props.isActive}\n                      onClick={() => {\n                        props.onDefenseClick();\n                      }}\n                    >\n                      <img src={defense} width={40} alt=\"img\" />\n                    </button>\n                  </div>\n                </div>\n              </div>\n              <div className=\"cell__HP\">\n                {/* <progress\n            className=\"cell__HP__bar\"\n            value={props.HP}\n            // value={currentUnit.getHP()}\n            max={props.currentUnit._HP}\n          ></progress> */}\n                {props.HP}\n              </div>\n\n              {props.hexed ? (\n                <div className=\"hexed\" style={{ color: \"pink\" }}>\n                  hexed\n                </div>\n              ) : (\n                <div></div>\n              )}\n              {props.protected ? (\n                <div className=\"protected\" style={{ color: \"pink\" }}>\n                  Protected\n                </div>\n              ) : (\n                <div></div>\n              )}\n            </div>\n          ) : (\n            <div className=\"cell\">\n              <div className=\"cell__unit-info\">\n                <img\n                  onClick={() => {\n                    console.log(props.currentUnit);\n                  }}\n                  className=\"cell__unit-info__image\"\n                  src={props.currentUnit._imgPath}\n                  alt=\"img\"\n                />\n                <div className=\"cell__unit-info__options\">\n                  <div className=\"cell__unit-info__options__defense\">\n                    <button\n                      className=\"defense-button\"\n                      disabled={!props.isActive}\n                      onClick={() => {\n                        props.onDefenseClick();\n                      }}\n                    >\n                      <img src={defense} width={40} alt=\"img\" />\n                    </button>\n                  </div>\n                </div>\n              </div>\n              <div className=\"cell__HP\">\n                {/* <progress\n            className=\"cell__HP__bar\"\n            value={props.HP}\n            // value={currentUnit.getHP()}\n            max={props.currentUnit._HP}\n          ></progress> */}\n                {props.HP}\n              </div>\n\n              {props.hexed ? (\n                <div className=\"hexed\" style={{ color: \"pink\" }}>\n                  hexed\n                </div>\n              ) : (\n                <div></div>\n              )}\n              {props.protected ? (\n                <div className=\"protected\" style={{ color: \"pink\" }}>\n                  Protected\n                </div>\n              ) : (\n                <div></div>\n              )}\n            </div>\n          )}\n        </React.Fragment>\n\n\n\n\n\n\n\n        // <div className=\"cell-atacked\">\n        //   <div className=\"cell__unit-info\">\n        //     <img\n        //       onClick={() => {\n        //         props.onClick();\n        //       }}\n        //       className=\"cell__unit-info__image\"\n        //       src={props.currentUnit._imgPath}\n        //       alt=\"img\"\n        //     />\n        //     <div className=\"cell__unit-info__options\">\n        //       <div className=\"cell__unit-info__options__defense\">\n        //         <button\n        //           className=\"defense-button\"\n        //           disabled={!props.isActive}\n        //           onClick={() => {\n        //             props.onDefenseClick();\n        //           }}\n        //         >\n        //           <img src={defense} width={40} alt=\"img\" />\n        //         </button>\n        //       </div>\n        //     </div>\n        //   </div>\n        //   <div className=\"cell__HP\">\n        //     {/* <progress\n        //     className=\"cell__HP__bar\"\n        //     value={props.HP}\n        //     // value={currentUnit.getHP()}\n        //     max={props.currentUnit._HP}\n        //   ></progress> */}\n        //     {props.HP}\n        //   </div>\n        //   {props.isActive ? (\n        //     <div className=\"activeUnit\" style={{ color: \"yellow\" }}>\n        //       Active\n        //     </div>\n        //   ) : (\n        //     <div></div>\n        //   )}\n        //   {props.hexed ? (\n        //     <div className=\"hexed\" style={{ color: \"pink\" }}>\n        //       hexed\n        //     </div>\n        //   ) : (\n        //     <div></div>\n        //   )}\n        //   {props.protected ? (\n        //     <div className=\"protected\" style={{ color: \"pink\" }}>\n        //       Protected\n        //     </div>\n        //   ) : (\n        //     <div></div>\n        //   )}\n        // </div>\n      ) : (\n        <React.Fragment>\n          {props.isActive ? (\n            <div className=\"cell-active\">\n              <div className=\"cell__unit-info\">\n                <img\n                  onClick={() => {\n                    console.log(props.currentUnit);\n                  }}\n                  className=\"cell__unit-info__image\"\n                  src={props.currentUnit._imgPath}\n                  alt=\"img\"\n                />\n                <div className=\"cell__unit-info__options\">\n                  <div className=\"cell__unit-info__options__defense\">\n                    <button\n                      className=\"defense-button\"\n                      disabled={!props.isActive}\n                      onClick={() => {\n                        props.onDefenseClick();\n                      }}\n                    >\n                      <img src={defense} width={40} alt=\"img\" />\n                    </button>\n                  </div>\n                </div>\n              </div>\n              <div className=\"cell__HP\">\n                {/* <progress\n            className=\"cell__HP__bar\"\n            value={props.HP}\n            // value={currentUnit.getHP()}\n            max={props.currentUnit._HP}\n          ></progress> */}\n                {props.HP}\n              </div>\n\n              {props.hexed ? (\n                <div className=\"hexed\" style={{ color: \"pink\" }}>\n                  hexed\n                </div>\n              ) : (\n                <div></div>\n              )}\n              {props.protected ? (\n                <div className=\"protected\" style={{ color: \"pink\" }}>\n                  Protected\n                </div>\n              ) : (\n                <div></div>\n              )}\n            </div>\n          ) : (\n            <div className=\"cell\">\n              <div className=\"cell__unit-info\">\n                <img\n                  onClick={() => {\n                    console.log(props.currentUnit);\n                  }}\n                  className=\"cell__unit-info__image\"\n                  src={props.currentUnit._imgPath}\n                  alt=\"img\"\n                />\n                <div className=\"cell__unit-info__options\">\n                  <div className=\"cell__unit-info__options__defense\">\n                    <button\n                      className=\"defense-button\"\n                      disabled={!props.isActive}\n                      onClick={() => {\n                        props.onDefenseClick();\n                      }}\n                    >\n                      <img src={defense} width={40} alt=\"img\" />\n                    </button>\n                  </div>\n                </div>\n              </div>\n              <div className=\"cell__HP\">\n                {/* <progress\n            className=\"cell__HP__bar\"\n            value={props.HP}\n            // value={currentUnit.getHP()}\n            max={props.currentUnit._HP}\n          ></progress> */}\n                {props.HP}\n              </div>\n\n              {props.hexed ? (\n                <div className=\"hexed\" style={{ color: \"pink\" }}>\n                  hexed\n                </div>\n              ) : (\n                <div></div>\n              )}\n              {props.protected ? (\n                <div className=\"protected\" style={{ color: \"pink\" }}>\n                  Protected\n                </div>\n              ) : (\n                <div></div>\n              )}\n            </div>\n          )}\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}