{"ast":null,"code":"import _slicedToArray from \"/home/kirill/WorkFolder/GameTS/my-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/kirill/WorkFolder/GameTS/my-app/src/page/UnitUI.tsx\";\nimport React, { useState } from \"react\";\nimport defense from \"../../src/img/18-512.png\";\nimport \"./CenterPart.css\";\nexport const UnitUI = props => {\n  const _useState = useState(props.currentUnit._HP),\n        _useState2 = _slicedToArray(_useState, 2),\n        currentHP = _useState2[0],\n        setCurrentHP = _useState2[1];\n\n  const hp = props.currentUnit.getHP();\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, props.underAtack ? React.createElement(\"div\", {\n    className: \"cell-atacked\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"cell__unit-info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    onClick: () => {\n      props.onClick();\n    },\n    className: \"cell__unit-info__image\",\n    src: props.currentUnit._imgPath,\n    alt: \"img\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"cell__unit-info__options\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"cell__unit-info__options__defense\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    disabled: !props.isActive,\n    onClick: () => {\n      props.onDefenseClick();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: defense,\n    width: 40,\n    alt: \"img\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }))))), React.createElement(\"div\", {\n    className: \"cell__HP\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, props.HP), props.isActive ? React.createElement(\"div\", {\n    className: \"activeUnit\",\n    style: {\n      color: \"yellow\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Active\") : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), props.hexed ? React.createElement(\"div\", {\n    className: \"hexed\",\n    style: {\n      color: \"pink\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"hexed\") : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"can do\")) : React.createElement(\"div\", {\n    className: \"cell\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"cell__unit-info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    onClick: () => {\n      console.log(props.currentUnit);\n    },\n    className: \"cell__unit-info__image\",\n    src: props.currentUnit._imgPath,\n    alt: \"img\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"cell__unit-info__options\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"cell__unit-info__options__defense\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    disabled: !props.isActive,\n    onClick: () => {\n      props.onDefenseClick();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: defense,\n    width: 40,\n    alt: \"img\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }))))), React.createElement(\"div\", {\n    className: \"cell__HP\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, props.HP), props.isActive ? React.createElement(\"div\", {\n    className: \"activeUnit\",\n    style: {\n      color: \"yellow\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"Active\") : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }), props.hexed ? React.createElement(\"div\", {\n    className: \"hexed\",\n    style: {\n      color: \"pink\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"hexed\") : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, \"can do\")));\n};","map":{"version":3,"sources":["/home/kirill/WorkFolder/GameTS/my-app/src/page/UnitUI.tsx"],"names":["React","useState","defense","UnitUI","props","currentUnit","_HP","currentHP","setCurrentHP","hp","getHP","underAtack","onClick","_imgPath","isActive","onDefenseClick","HP","color","hexed","console","log"],"mappings":"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","sourcesContent":["import React, { FunctionComponent, useEffect, useState } from \"react\";\nimport Unit from \"../strategy/classes/unit/Unit\";\nimport defense from \"../../src/img/18-512.png\";\nimport \"./CenterPart.css\";\n\ninterface UnitUIProps {\n  currentIndex: number;\n  currentUnit: Unit;\n  onClick: any;\n  HP: number;\n  underAtack: boolean;\n  onDefenseClick: any;\n  isActive: boolean;\n  hexed: boolean;\n  protected:boo\n}\nexport const UnitUI: FunctionComponent<UnitUIProps> = props => {\n  const [currentHP, setCurrentHP] = useState(props.currentUnit._HP);\n  const hp = props.currentUnit.getHP();\n\n  return (\n    <React.Fragment>\n      {props.underAtack ? (\n        <div className=\"cell-atacked\">\n          <div className=\"cell__unit-info\">\n            <img\n              onClick={() => {\n                props.onClick();\n              }}\n              className=\"cell__unit-info__image\"\n              src={props.currentUnit._imgPath}\n              alt=\"img\"\n            />\n            <div className=\"cell__unit-info__options\">\n              <div className=\"cell__unit-info__options__defense\">\n                <button\n                  disabled={!props.isActive}\n                  onClick={() => {\n                    props.onDefenseClick();\n                  }}\n                >\n                  <img src={defense} width={40} alt=\"img\" />\n                </button>\n              </div>\n            </div>\n          </div>\n          <div className=\"cell__HP\">\n            {/* <progress\n            className=\"cell__HP__bar\"\n            value={props.HP}\n            // value={currentUnit.getHP()}\n            max={props.currentUnit._HP}\n          ></progress> */}\n            {props.HP}\n          </div>\n          {props.isActive ? (\n            <div className=\"activeUnit\" style={{ color: \"yellow\" }}>\n              Active\n            </div>\n          ) : (\n            <div></div>\n          )}\n          {props.hexed ? (\n            <div className=\"hexed\" style={{ color: \"pink\" }}>\n              hexed\n            </div>\n          ) : (\n            <div>can do</div>\n          )}\n        </div>\n      ) : (\n        <div className=\"cell\">\n          <div className=\"cell__unit-info\">\n            <img\n              onClick={() => {\n                console.log(props.currentUnit);\n              }}\n              className=\"cell__unit-info__image\"\n              src={props.currentUnit._imgPath}\n              alt=\"img\"\n            />\n            <div className=\"cell__unit-info__options\">\n              <div className=\"cell__unit-info__options__defense\">\n                <button\n                  disabled={!props.isActive}\n                  onClick={() => {\n                    props.onDefenseClick();\n                  }}\n                >\n                  <img src={defense} width={40} alt=\"img\" />\n                </button>\n              </div>\n            </div>\n          </div>\n          <div className=\"cell__HP\">\n            {/* <progress\n            className=\"cell__HP__bar\"\n            value={props.HP}\n            // value={currentUnit.getHP()}\n            max={props.currentUnit._HP}\n          ></progress> */}\n            {props.HP}\n          </div>\n          {props.isActive ? (\n            <div className=\"activeUnit\" style={{ color: \"yellow\" }}>\n              Active\n            </div>\n          ) : (\n            <div></div>\n          )}\n          {props.hexed ? (\n            <div className=\"hexed\" style={{ color: \"pink\" }}>\n              hexed\n            </div>\n          ) : (\n            <div>can do</div>\n          )}\n        </div>\n      )}\n    </React.Fragment>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}