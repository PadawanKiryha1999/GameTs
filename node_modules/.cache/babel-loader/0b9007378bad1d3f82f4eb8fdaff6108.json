{"ast":null,"code":"export default class ArcherStrategy {\n  doAlgorithm(atackingUnit, target, targets, battleField, HP, isProtected) {\n    console.log(\"Archer strategy \");\n    console.log(\"atacking unit\", atackingUnit);\n    console.log(\"chosen target\", target);\n    console.log(\"array of targets\", targets);\n    console.log(\"battlefield\", battleField);\n    console.log(\"HPs\", HP);\n    const copyHP = [...HP];\n    let _damage = battleField[atackingUnit]._damage;\n    if (isProtected) _damage = _damage * 0.5;\n    battleField[target].doHPreduce(_damage, isProtected[target]);\n    if (_damage >= HP[target]) copyHP[target] = 0;else {\n      copyHP[target] = HP[target] - _damage;\n    }\n    return copyHP;\n  }\n\n  doTargetSelection(unit, battleField) {\n    console.log(\" Archer target selection\");\n    const copyBattleField = [...battleField];\n    if (unit._id < 6) return copyBattleField.splice(6, 12);else return copyBattleField.splice(0, 6);\n  }\n\n}","map":{"version":3,"sources":["/home/kirill/WorkFolder/GameTS/my-app/src/strategy/classes/unitStrategy/ArcherStrategy.ts"],"names":["ArcherStrategy","doAlgorithm","atackingUnit","target","targets","battleField","HP","isProtected","console","log","copyHP","_damage","doHPreduce","doTargetSelection","unit","copyBattleField","_id","splice"],"mappings":"AAEA,eAAe,MAAMA,cAAN,CAA0C;AAChDC,EAAAA,WAAP,CACEC,YADF,EAEEC,MAFF,EAGEC,OAHF,EAIEC,WAJF,EAKEC,EALF,EAMEC,WANF,EAOY;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BP,YAA7B;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BN,MAA7B;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCL,OAAhC;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BJ,WAA3B;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBH,EAAnB;AACA,UAAMI,MAAgB,GAAG,CAAC,GAAGJ,EAAJ,CAAzB;AAPU,QAQJK,OARI,GAQQN,WAAW,CAACH,YAAD,CARnB,CAQJS,OARI;AASV,QAAIJ,WAAJ,EAAiBI,OAAO,GAAGA,OAAO,GAAG,GAApB;AAEjBN,IAAAA,WAAW,CAACF,MAAD,CAAX,CAAoBS,UAApB,CAA+BD,OAA/B,EAAwCJ,WAAW,CAACJ,MAAD,CAAnD;AACA,QAAIQ,OAAO,IAAIL,EAAE,CAACH,MAAD,CAAjB,EAA2BO,MAAM,CAACP,MAAD,CAAN,GAAiB,CAAjB,CAA3B,KACK;AACHO,MAAAA,MAAM,CAACP,MAAD,CAAN,GAAiBG,EAAE,CAACH,MAAD,CAAF,GAAaQ,OAA9B;AACD;AAED,WAAOD,MAAP;AACD;;AACMG,EAAAA,iBAAP,CAAyBC,IAAzB,EAAqCT,WAArC,EAA4E;AAC1EG,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACA,UAAMM,eAAe,GAAG,CAAC,GAAGV,WAAJ,CAAxB;AACA,QAAIS,IAAI,CAACE,GAAL,GAAW,CAAf,EAAkB,OAAOD,eAAe,CAACE,MAAhB,CAAuB,CAAvB,EAA0B,EAA1B,CAAP,CAAlB,KACK,OAAOF,eAAe,CAACE,MAAhB,CAAuB,CAAvB,EAA0B,CAA1B,CAAP;AACN;;AAhCsD","sourcesContent":["import IStrategy from \"../../interface/IConcreteStrategy\";\nimport Unit from \"../unit/Unit\";\nexport default class ArcherStrategy implements IStrategy {\n  public doAlgorithm(\n    atackingUnit: number,\n    target: number,\n    targets: number[],\n    battleField: Array<Unit>,\n    HP: number[],\n    isProtected: boolean[]\n  ): number[] {\n    console.log(\"Archer strategy \");\n    console.log(\"atacking unit\", atackingUnit);\n    console.log(\"chosen target\", target);\n    console.log(\"array of targets\", targets);\n    console.log(\"battlefield\", battleField);\n    console.log(\"HPs\", HP);\n    const copyHP: number[] = [...HP];\n    let { _damage } = battleField[atackingUnit];\n    if (isProtected) _damage = _damage * 0.5;\n\n    battleField[target].doHPreduce(_damage, isProtected[target]);\n    if (_damage >= HP[target]) copyHP[target] = 0;\n    else {\n      copyHP[target] = HP[target] - _damage;\n    }\n\n    return copyHP;\n  }\n  public doTargetSelection(unit: Unit, battleField: Array<Unit>): Array<Unit> {\n    console.log(\" Archer target selection\");\n    const copyBattleField = [...battleField];\n    if (unit._id < 6) return copyBattleField.splice(6, 12);\n    else return copyBattleField.splice(0, 6);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}