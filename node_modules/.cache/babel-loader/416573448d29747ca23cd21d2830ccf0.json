{"ast":null,"code":"export const generateQueue = (units, newTurn) => {\n  let copy = Object.assign([], units);\n\n  if (newTurn) {\n    console.log(\"its new turn\");\n  }\n\n  copy.sort((a, b) => {\n    if (a._initiative < b._initiative) {\n      return 1;\n    }\n\n    if (a._initiative > b._initiative) {\n      return -1;\n    }\n\n    return 0;\n  });\n  return copy;\n};","map":{"version":3,"sources":["/home/kirill/WorkFolder/GameTS/my-app/src/Logic/Generatequeue.ts"],"names":["generateQueue","units","newTurn","copy","Object","assign","console","log","sort","a","b","_initiative"],"mappings":"AACA,OAAO,MAAMA,aAAkB,GAAG,CAACC,KAAD,EAAqBC,OAArB,KAA0C;AAC1E,MAAIC,IAAiB,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,CAAxB;;AACA,MAAIC,OAAJ,EAAa;AACXI,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACD;;AAEDJ,EAAAA,IAAI,CAACK,IAAL,CAAU,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAClB,QAAID,CAAC,CAACE,WAAF,GAAgBD,CAAC,CAACC,WAAtB,EAAmC;AACjC,aAAO,CAAP;AACD;;AACD,QAAIF,CAAC,CAACE,WAAF,GAAgBD,CAAC,CAACC,WAAtB,EAAmC;AACjC,aAAO,CAAC,CAAR;AACD;;AACD,WAAO,CAAP;AACD,GARD;AASA,SAAOR,IAAP;AACD,CAhBM","sourcesContent":["import Unit from \"../strategy/classes/unit/Unit\";\nexport const generateQueue: any = (units: Array<Unit>, newTurn?: string) => {\n  let copy: Array<Unit> = Object.assign([], units);\n  if (newTurn) {\n    console.log(\"its new turn\");\n  }\n\n  copy.sort((a, b) => {\n    if (a._initiative < b._initiative) {\n      return 1;\n    }\n    if (a._initiative > b._initiative) {\n      return -1;\n    }\n    return 0;\n  });\n  return copy;\n};\n"]},"metadata":{},"sourceType":"module"}