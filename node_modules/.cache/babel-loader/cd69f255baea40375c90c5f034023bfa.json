{"ast":null,"code":"export default class HealerStrategy {\n  doAlgorithm(atackingUnit, target, targets, battleField, HP, protection, support) {\n    console.log(\"Healer strategy \");\n    console.log(\"atacking unit\", atackingUnit);\n    console.log(\"chosen target\", target);\n    console.log(\"array of targets\", targets);\n    console.log(\"battlefield\", battleField);\n    console.log(\"HPs\", HP);\n    const copyHP = [...HP];\n    const _battleField$atacking = battleField[atackingUnit],\n          _damage = _battleField$atacking._damage,\n          _maxHP = _battleField$atacking._maxHP;\n    const heal = _damage * -1;\n\n    if (copyHP[target] + heal > _maxHP) {\n      copyHP[target] = _maxHP;\n    }\n\n    battleField[target].doHPreduce(heal);\n    copyHP[target] = battleField[target].doHPUIReduce(copyHP[target], heal);\n    return copyHP;\n  }\n\n  doTargetSelection(unit, battleField) {\n    console.log(\" Healer target selection\");\n    const copyBattleField = [...battleField];\n    if (unit._id >= 6) return copyBattleField.splice(6, 12);else return copyBattleField.splice(0, 6);\n  }\n\n}","map":{"version":3,"sources":["/home/kirill/WorkFolder/GameTS/my-app/src/strategy/classes/unitStrategy/HealerStrategy.ts"],"names":["HealerStrategy","doAlgorithm","atackingUnit","target","targets","battleField","HP","protection","support","console","log","copyHP","_damage","_maxHP","heal","doHPreduce","doHPUIReduce","doTargetSelection","unit","copyBattleField","_id","splice"],"mappings":"AAEA,eAAe,MAAMA,cAAN,CAA0C;AAChDC,EAAAA,WAAP,CACEC,YADF,EAEEC,MAFF,EAGEC,OAHF,EAIEC,WAJF,EAKEC,EALF,EAMEC,UANF,EAOEC,OAPF,EAQY;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BR,YAA7B;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BP,MAA7B;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCN,OAAhC;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BL,WAA3B;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBJ,EAAnB;AACA,UAAMK,MAAgB,GAAG,CAAC,GAAGL,EAAJ,CAAzB;AAPU,kCAQkBD,WAAW,CAACH,YAAD,CAR7B;AAAA,UAQFU,OARE,yBAQFA,OARE;AAAA,UAQOC,MARP,yBAQOA,MARP;AASV,UAAMC,IAAY,GAAGF,OAAO,GAAG,CAAC,CAAhC;;AACA,QAAID,MAAM,CAACR,MAAD,CAAN,GAAiBW,IAAjB,GAAwBD,MAA5B,EAAoC;AAClCF,MAAAA,MAAM,CAACR,MAAD,CAAN,GAAiBU,MAAjB;AAED;;AACDR,IAAAA,WAAW,CAACF,MAAD,CAAX,CAAoBY,UAApB,CAA+BD,IAA/B;AACAH,IAAAA,MAAM,CAACR,MAAD,CAAN,GAAiBE,WAAW,CAACF,MAAD,CAAX,CAAoBa,YAApB,CAAiCL,MAAM,CAACR,MAAD,CAAvC,EAAiDW,IAAjD,CAAjB;AACA,WAAOH,MAAP;AACD;;AACMM,EAAAA,iBAAP,CAAyBC,IAAzB,EAAqCb,WAArC,EAA4E;AAC1EI,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AAEA,UAAMS,eAAe,GAAG,CAAC,GAAGd,WAAJ,CAAxB;AACA,QAAIa,IAAI,CAACE,GAAL,IAAY,CAAhB,EAAmB,OAAOD,eAAe,CAACE,MAAhB,CAAuB,CAAvB,EAA0B,EAA1B,CAAP,CAAnB,KACK,OAAOF,eAAe,CAACE,MAAhB,CAAuB,CAAvB,EAA0B,CAA1B,CAAP;AACN;;AAjCsD","sourcesContent":["import IStrategy from \"../../interface/IConcreteStrategy\";\nimport Unit from \"../unit/Unit\";\nexport default class HealerStrategy implements IStrategy {\n  public doAlgorithm(\n    atackingUnit: number,\n    target: number,\n    targets: number[],\n    battleField: Array<Unit>,\n    HP: number[],\n    protection: undefined,\n    support: string\n  ): number[] {\n    console.log(\"Healer strategy \");\n    console.log(\"atacking unit\", atackingUnit);\n    console.log(\"chosen target\", target);\n    console.log(\"array of targets\", targets);\n    console.log(\"battlefield\", battleField);\n    console.log(\"HPs\", HP);\n    const copyHP: number[] = [...HP];\n    const { _damage, _maxHP } = battleField[atackingUnit];\n    const heal: number = _damage * -1;\n    if (copyHP[target] + heal > _maxHP) {\n      copyHP[target] = _maxHP;\n      \n    }\n    battleField[target].doHPreduce(heal);\n    copyHP[target] = battleField[target].doHPUIReduce(copyHP[target], heal);\n    return copyHP;\n  }\n  public doTargetSelection(unit: Unit, battleField: Array<Unit>): Array<Unit> {\n    console.log(\" Healer target selection\");\n\n    const copyBattleField = [...battleField];\n    if (unit._id >= 6) return copyBattleField.splice(6, 12);\n    else return copyBattleField.splice(0, 6);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}