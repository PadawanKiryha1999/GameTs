{"ast":null,"code":"import ArchiMage from \"../strategy/classes/unit/ArchiMageUnit\";\nimport Bandit from \"../strategy/classes/unit/BanditUnit\";\nimport Centaur from \"../strategy/classes/unit/CentaurUnit\";\nimport ElfArcher from \"../strategy/classes/unit/ElfArcherUnit\";\nimport Monk from \"../strategy/classes/unit/MonkUnit\";\nimport Sirena from \"../strategy/classes/unit/SirenaUnit\";\nimport SkeletonMage from \"../strategy/classes/unit/SkeletonMageUnit\";\nimport Skeleton from \"../strategy/classes/unit/SkeletonUnit\";\nconst allUnits = [ArchiMage, Bandit, Centaur, ElfArcher, Monk, Sirena, Skeleton, SkeletonMage]; // export const randomIndex: number = Math.floor(Math.random() * 8);\n// export const randomUnit: object = allUnits[randomIndex];\n\nexport const takeRandomUnit = () => {\n  let randomIndex = Math.floor(Math.random() * 8);\n  let randomUnit = allUnits[randomIndex];\n  let unit = new randomUnit();\n  return unit;\n};\nexport const UnitsArrayGenerate = () => {\n  const units = [];\n\n  const generateRandomUnit = index => {\n    let randomIndex = Math.floor(Math.random() * 8);\n    let randomUnit = allUnits[randomIndex];\n    let unit = new randomUnit(index);\n    return unit;\n  };\n\n  for (let i = 0; i < 12; ++i) {\n    units.push(generateRandomUnit(i));\n  }\n\n  return units;\n};\nexport const UnitsArray = UnitsArrayGenerate();","map":{"version":3,"sources":["/home/kirill/WorkFolder/GameTS/my-app/src/Logic/GenerateUnits.ts"],"names":["ArchiMage","Bandit","Centaur","ElfArcher","Monk","Sirena","SkeletonMage","Skeleton","allUnits","takeRandomUnit","randomIndex","Math","floor","random","randomUnit","unit","UnitsArrayGenerate","units","generateRandomUnit","index","i","push","UnitsArray"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,wCAAtB;AACA,OAAOC,MAAP,MAAmB,qCAAnB;AACA,OAAOC,OAAP,MAAoB,sCAApB;AACA,OAAOC,SAAP,MAAsB,wCAAtB;AACA,OAAOC,IAAP,MAAiB,mCAAjB;AACA,OAAOC,MAAP,MAAmB,qCAAnB;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,OAAOC,QAAP,MAAqB,uCAArB;AAGA,MAAMC,QAAkB,GAAG,CACzBR,SADyB,EAEzBC,MAFyB,EAGzBC,OAHyB,EAIzBC,SAJyB,EAKzBC,IALyB,EAMzBC,MANyB,EAOzBE,QAPyB,EAQzBD,YARyB,CAA3B,C,CAUA;AACA;;AACA,OAAO,MAAMG,cAAmB,GAAG,MAAM;AACvC,MAAIC,WAAmB,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,CAA1B;AACA,MAAIC,UAAe,GAAGN,QAAQ,CAACE,WAAD,CAA9B;AACA,MAAIK,IAAI,GAAG,IAAID,UAAJ,EAAX;AACA,SAAOC,IAAP;AACD,CALM;AAMP,OAAO,MAAMC,kBAA0B,GAAE,MAAM;AAC7C,QAAMC,KAAkB,GAAG,EAA3B;;AACA,QAAMC,kBAAuB,GAAIC,KAAD,IAAmB;AACjD,QAAIT,WAAmB,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,CAA1B;AACA,QAAIC,UAAe,GAAGN,QAAQ,CAACE,WAAD,CAA9B;AACA,QAAIK,IAAY,GAAG,IAAID,UAAJ,CAAeK,KAAf,CAAnB;AACA,WAAOJ,IAAP;AACD,GALD;;AAMA,OAAK,IAAIK,CAAS,GAAG,CAArB,EAAwBA,CAAC,GAAG,EAA5B,EAAgC,EAAEA,CAAlC,EAAqC;AACnCH,IAAAA,KAAK,CAACI,IAAN,CAAWH,kBAAkB,CAACE,CAAD,CAA7B;AACD;;AACD,SAAOH,KAAP;AACD,CAZM;AAcP,OAAO,MAAMK,UAAuB,GAAGN,kBAAkB,EAAlD","sourcesContent":["import ArchiMage from \"../strategy/classes/unit/ArchiMageUnit\";\nimport Bandit from \"../strategy/classes/unit/BanditUnit\";\nimport Centaur from \"../strategy/classes/unit/CentaurUnit\";\nimport ElfArcher from \"../strategy/classes/unit/ElfArcherUnit\";\nimport Monk from \"../strategy/classes/unit/MonkUnit\";\nimport Sirena from \"../strategy/classes/unit/SirenaUnit\";\nimport SkeletonMage from \"../strategy/classes/unit/SkeletonMageUnit\";\nimport Skeleton from \"../strategy/classes/unit/SkeletonUnit\";\nimport Unit from \"../strategy/classes/unit/Unit\";\n\nconst allUnits: object[] = [\n  ArchiMage,\n  Bandit,\n  Centaur,\n  ElfArcher,\n  Monk,\n  Sirena,\n  Skeleton,\n  SkeletonMage\n];\n// export const randomIndex: number = Math.floor(Math.random() * 8);\n// export const randomUnit: object = allUnits[randomIndex];\nexport const takeRandomUnit: any = () => {\n  let randomIndex: number = Math.floor(Math.random() * 8);\n  let randomUnit: any = allUnits[randomIndex];\n  let unit = new randomUnit();\n  return unit;\n};\nexport const UnitsArrayGenerate:  Array= () => {\n  const units: Array<Unit> = [];\n  const generateRandomUnit: any = (index: number) => {\n    let randomIndex: number = Math.floor(Math.random() * 8);\n    let randomUnit: any = allUnits[randomIndex];\n    let unit: object = new randomUnit(index);\n    return unit;\n  };\n  for (let i: number = 0; i < 12; ++i) {\n    units.push(generateRandomUnit(i));\n  }\n  return units;\n};\n\nexport const UnitsArray: Array<Unit> = UnitsArrayGenerate();\n"]},"metadata":{},"sourceType":"module"}