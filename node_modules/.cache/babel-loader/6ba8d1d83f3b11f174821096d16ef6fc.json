{"ast":null,"code":"import _slicedToArray from \"/home/kirill/WorkFolder/GameTS/my-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/kirill/WorkFolder/GameTS/my-app/src/App.tsx\";\nimport React from \"react\";\nimport \"./App.css\"; // import { CenterPart } from \"./page/CenterPart\";\n\nimport { RightPart } from \"./page/RightPart\";\nimport { UnitsArray } from \"./Logic/GenerateUnits\";\nimport { useState, useEffect } from \"react\";\nimport { QueueUI } from \"../src/page/QueueUI\";\nimport { UnitUI } from \"../src/page/UnitUI\";\nimport { generateQueue } from \"../src/Logic/Generatequeue\";\n\nconst App = () => {\n  const unitsHP = UnitsArray.map(unit => {\n    return unit._HP;\n  });\n  const getQueue = generateQueue(UnitsArray);\n\n  const _useState = useState(getQueue),\n        _useState2 = _slicedToArray(_useState, 2),\n        queue = _useState2[0],\n        setQueue = _useState2[1];\n\n  useEffect(() => {\n    if (isHexed[queue[0]._id]) {\n      setQueue(generateQueue(UnitsArray, \"new turn\"));\n    }\n\n    if (queue.length === 0) {\n      console.log(\"tut ochibka\");\n      setQueue(generateQueue(UnitsArray, \"new turn\"));\n    } else {\n      if (queue.length <= 6) {\n        console.log(\"must something happend\");\n        const selectedIndex = queue[0]._id;\n        let compareIndex;\n        let winTeam;\n\n        if (selectedIndex >= 6) {\n          compareIndex = 11;\n          winTeam = \"Dire\";\n        } else {\n          compareIndex = 5;\n          winTeam = \"Radiant\";\n        }\n\n        const team = [];\n\n        for (let i = 1; i < queue.length; ++i) {\n          if (queue[i]._id <= compareIndex) {\n            team.push(queue[i]);\n          }\n        }\n\n        console.log(\"index\", queue[0]._id);\n        console.log(\"команда\", team);\n\n        if (team.length === queue.length) {\n          alert(\"Game over team \".concat(winTeam, \" win!\"));\n          window.location.reload();\n        }\n      }\n    }\n\n    const unit = queue[0];\n\n    if (queue.length === 1 && queue[0]._HP === 0 || queue.length === 1 && isHexed[unit._id]) {\n      const hexedUnits = [...isHexed];\n      hexedUnits[unit._id] = true;\n      setHexed(hexedUnits);\n      const nextQueue = [...queue];\n      nextQueue.shift();\n      setQueue(nextQueue);\n    } else if (isHexed[unit._id]) {\n      const hexedUnits = [...isHexed];\n      hexedUnits[unit._id] = true;\n      setHexed(hexedUnits);\n      const nextQueue = [...queue];\n      nextQueue.shift();\n      setQueue(nextQueue);\n    } else {\n      if (unit._HP <= 0) {\n        const nextQueue = [...queue];\n        nextQueue.shift();\n        setQueue(nextQueue);\n      } else {\n        const targetsForAction = unit.doSelect(UnitsArray);\n        const a = [];\n        const idTargets = targetsForAction.map(unit => {\n          a.push(unit._id);\n          return unit._id;\n        });\n        setTarget(idTargets);\n      }\n    }\n  }, [queue]);\n  const falseArray = Array(12).fill(false);\n\n  const _useState3 = useState(falseArray),\n        _useState4 = _slicedToArray(_useState3, 2),\n        isHexed = _useState4[0],\n        setHexed = _useState4[1];\n\n  const _useState5 = useState(falseArray),\n        _useState6 = _slicedToArray(_useState5, 2),\n        isProtected = _useState6[0],\n        setPtotect = _useState6[1];\n\n  const _useState7 = useState(),\n        _useState8 = _slicedToArray(_useState7, 2),\n        target = _useState8[0],\n        setTarget = _useState8[1];\n\n  const _useState9 = useState(unitsHP),\n        _useState10 = _slicedToArray(_useState9, 2),\n        HP = _useState10[0],\n        setHP = _useState10[1];\n\n  const handleDefenseClick = index => {\n    const protectedState = [...isProtected];\n    protectedState[index] = true;\n    setPtotect(protectedState);\n    const nextQueue = [...queue];\n    nextQueue.shift();\n    setQueue(nextQueue);\n\n    if (nextQueue.length === 0 || queue.length === 0 || isHexed[queue[0]._id]) {\n      console.log(\"new queue\");\n      setPtotect(falseArray); /////сбросить хексы\n\n      setQueue(generateQueue(UnitsArray, \"new turn\", isHexed));\n      setHexed(falseArray);\n    }\n\n    return 1;\n  };\n\n  const handleClick = index => {\n    // (index===0) ? console.log(index) : console.log(index);\n    const selectedUnit = queue[0];\n    const newHP = selectedUnit.doAction(selectedUnit._id, index, target, UnitsArray, HP, isProtected);\n    console.log(\"выбранный юнит\", selectedUnit._id);\n    console.log(\"выбранная цель\", index);\n\n    if (selectedUnit._unitType === \"paralyazer\") {\n      console.log(\"its naga\");\n      const copyIsHexed = [...isHexed];\n      console.log(\"до действия\", copyIsHexed);\n      copyIsHexed[index] = true;\n      console.log(\"after действия\", copyIsHexed);\n      setHexed(copyIsHexed);\n    }\n\n    console.log(isHexed);\n    console.log(newHP);\n    setHP(newHP);\n    const nextQueue = [...queue];\n    nextQueue.shift();\n    setQueue(nextQueue); // if (queue.length === 0) {\n    //   console.log(\"new queue\");\n    //   setPtotect(falseArray);\n    //   ///сбросить хексы\n    //   setQueue(generateQueue(UnitsArray, \"new turn\"));\n    //   setHexed(falseArray);\n    // }\n    // ниже рабочий\n\n    if (nextQueue.length === 0 || queue.length === 0 || isHexed[queue[0]._id]) {\n      console.log(\"new queue\");\n      setPtotect(falseArray); /////сбросить хексы\n\n      setQueue(generateQueue(UnitsArray, \"new turn\", isHexed));\n      setHexed(falseArray);\n    }\n\n    return 1;\n  };\n\n  const renderLeftPart = () => {\n    const unitsArrayUI = queue.map((unit, index) => {\n      return React.createElement(QueueUI, {\n        HP: HP[unit._id],\n        key: index,\n        currentUnit: unit,\n        currentIndex: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      });\n    });\n    return unitsArrayUI;\n  };\n\n  const isAtcaked = (index, unit) => {\n    // if (target.indexof(index)) return true;\n    // else return false;\n    if (target === undefined) {} else {\n      if (target.indexOf(index) === -1 || HP[index] <= 0) {\n        return false;\n      } else return true;\n    }\n  };\n\n  const renderCenterPart = () => {\n    const unitsArrayUI = UnitsArray.map((unit, index) => {\n      if (index === 5) {\n        return React.createElement(React.Fragment, {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 194\n          },\n          __self: this\n        }, React.createElement(UnitUI, {\n          HP: HP[index],\n          currentUnit: unit,\n          currentIndex: index,\n          underAtack: isAtcaked(index, unit),\n          isActive: queue[0]._id === index ? true : false,\n          onClick: () => {\n            handleClick(index);\n          },\n          onDefenseClick: () => {\n            handleDefenseClick(index);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 195\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"border\",\n          key: 100,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 208\n          },\n          __self: this\n        }));\n      }\n\n      return React.createElement(UnitUI, {\n        HP: HP[index],\n        key: index,\n        currentUnit: unit,\n        currentIndex: index,\n        isActive: queue[0]._id === index ? true : false,\n        underAtack: isAtcaked(index, unit),\n        onClick: () => {\n          handleClick(index);\n        },\n        onDefenseClick: () => {\n          handleDefenseClick(index);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      });\n    });\n    return React.createElement(\"div\", {\n      className: \"battleField\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, unitsArrayUI);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"app\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"left-part\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241\n    },\n    __self: this\n  }, renderLeftPart()), \";\", React.createElement(\"div\", {\n    className: \"battleField\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243\n    },\n    __self: this\n  }, renderCenterPart()), \";\", React.createElement(RightPart, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244\n    },\n    __self: this\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/kirill/WorkFolder/GameTS/my-app/src/App.tsx"],"names":["React","RightPart","UnitsArray","useState","useEffect","QueueUI","UnitUI","generateQueue","App","unitsHP","map","unit","_HP","getQueue","queue","setQueue","isHexed","_id","length","console","log","selectedIndex","compareIndex","winTeam","team","i","push","alert","window","location","reload","hexedUnits","setHexed","nextQueue","shift","targetsForAction","doSelect","a","idTargets","setTarget","falseArray","Array","fill","isProtected","setPtotect","target","HP","setHP","handleDefenseClick","index","protectedState","handleClick","selectedUnit","newHP","doAction","_unitType","copyIsHexed","renderLeftPart","unitsArrayUI","isAtcaked","undefined","indexOf","renderCenterPart"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\n// import { CenterPart } from \"./page/CenterPart\";\nimport { RightPart } from \"./page/RightPart\";\nimport { LeftPart } from \"./page/LeftPart\";\nimport { CenterPartV2 } from \"./page/CenterPartV2\";\nimport { UnitsArray } from \"./Logic/GenerateUnits\";\nimport Unit from \"../src/strategy/classes/unit/Unit\";\nimport { useState, useEffect } from \"react\";\nimport { QueueUI } from \"../src/page/QueueUI\";\nimport { UnitUI } from \"../src/page/UnitUI\";\nimport { generateQueue } from \"../src/Logic/Generatequeue\";\n\nconst App: React.FC = () => {\n  const unitsHP: number[] = UnitsArray.map(unit => {\n    return unit._HP;\n  });\n  const getQueue: Array<Unit> = generateQueue(UnitsArray);\n  const [queue, setQueue] = useState(getQueue);\n\n  useEffect(() => {\n    if (isHexed[queue[0]._id]) {\n      setQueue(generateQueue(UnitsArray, \"new turn\"));\n    }\n\n    if (queue.length === 0) {\n      console.log(\"tut ochibka\");\n      setQueue(generateQueue(UnitsArray, \"new turn\"));\n    } else {\n      if (queue.length <= 6) {\n        console.log(\"must something happend\");\n        const selectedIndex: number = queue[0]._id;\n        let compareIndex: number;\n        let winTeam: string;\n        if (selectedIndex >= 6) {\n          compareIndex = 11;\n          winTeam = \"Dire\";\n        } else {\n          compareIndex = 5;\n          winTeam = \"Radiant\";\n        }\n        const team = [];\n        for (let i = 1; i < queue.length; ++i) {\n          if (queue[i]._id <= compareIndex) {\n            team.push(queue[i]);\n          }\n        }\n        console.log(\"index\", queue[0]._id);\n        console.log(\"команда\", team);\n        if (team.length === queue.length) {\n          alert(`Game over team ${winTeam} win!`);\n          window.location.reload();\n        }\n      }\n    }\n\n    const unit = queue[0];\n    if (\n      (queue.length === 1 && queue[0]._HP === 0) ||\n      (queue.length === 1 && isHexed[unit._id])\n    ) {\n      const hexedUnits = [...isHexed];\n      hexedUnits[unit._id] = true;\n      setHexed(hexedUnits);\n      const nextQueue = [...queue];\n      nextQueue.shift();\n      setQueue(nextQueue);\n    } else if (isHexed[unit._id]) {\n      const hexedUnits = [...isHexed];\n      hexedUnits[unit._id] = true;\n      setHexed(hexedUnits);\n      const nextQueue = [...queue];\n      nextQueue.shift();\n      setQueue(nextQueue);\n    } else {\n      if (unit._HP <= 0) {\n        const nextQueue = [...queue];\n        nextQueue.shift();\n        setQueue(nextQueue);\n      } else {\n        const targetsForAction: Array<Unit> = unit.doSelect(UnitsArray);\n\n        const a: number[] = [];\n        const idTargets: number[] = targetsForAction.map(unit => {\n          a.push(unit._id);\n          return unit._id;\n        });\n        setTarget(idTargets);\n      }\n    }\n  }, [queue]);\n  const falseArray: boolean[] = Array(12).fill(false);\n  const [isHexed, setHexed] = useState(falseArray);\n  const [isProtected, setPtotect] = useState(falseArray);\n  const [target, setTarget] = useState();\n  const [HP, setHP] = useState(unitsHP);\n\n  const handleDefenseClick = (index: number): number => {\n    const protectedState: Array<boolean> = [...isProtected];\n    protectedState[index] = true;\n    setPtotect(protectedState);\n    const nextQueue = [...queue];\n    nextQueue.shift();\n    setQueue(nextQueue);\n    if (nextQueue.length === 0 || queue.length === 0 || isHexed[queue[0]._id]) {\n      console.log(\"new queue\");\n      setPtotect(falseArray);\n      /////сбросить хексы\n      setQueue(generateQueue(UnitsArray, \"new turn\", isHexed));\n      setHexed(falseArray);\n    }\n\n    return 1;\n  };\n  const handleClick = (index: number): number => {\n    // (index===0) ? console.log(index) : console.log(index);\n    const selectedUnit: Unit = queue[0];\n    const newHP: number[] = selectedUnit.doAction(\n      selectedUnit._id,\n      index,\n      target,\n      UnitsArray,\n      HP,\n      isProtected\n    );\n    console.log(\"выбранный юнит\", selectedUnit._id);\n    console.log(\"выбранная цель\", index);\n    if (selectedUnit._unitType === \"paralyazer\") {\n      console.log(\"its naga\");\n      const copyIsHexed = [...isHexed];\n      console.log(\"до действия\", copyIsHexed);\n      copyIsHexed[index] = true;\n      console.log(\"after действия\", copyIsHexed);\n      setHexed(copyIsHexed);\n    }\n    console.log(isHexed);\n    console.log(newHP);\n    setHP(newHP);\n    const nextQueue = [...queue];\n    nextQueue.shift();\n    setQueue(nextQueue);\n    // if (queue.length === 0) {\n    //   console.log(\"new queue\");\n    //   setPtotect(falseArray);\n    //   ///сбросить хексы\n    //   setQueue(generateQueue(UnitsArray, \"new turn\"));\n    //   setHexed(falseArray);\n    // }\n    // ниже рабочий\n    if (nextQueue.length === 0 || queue.length === 0 || isHexed[queue[0]._id]) {\n      console.log(\"new queue\");\n      setPtotect(falseArray);\n      /////сбросить хексы\n      setQueue(generateQueue(UnitsArray, \"new turn\", isHexed));\n      setHexed(falseArray);\n    }\n\n    return 1;\n  };\n\n  type props = {\n    index: number;\n  };\n\n  const renderLeftPart = () => {\n    const unitsArrayUI: any = queue.map((unit, index) => {\n      return (\n        <QueueUI\n          HP={HP[unit._id]}\n          key={index}\n          currentUnit={unit}\n          currentIndex={index}\n        />\n      );\n    });\n\n    return unitsArrayUI;\n  };\n  const isAtcaked: any = (index: number, unit: Unit) => {\n    // if (target.indexof(index)) return true;\n    // else return false;\n    if (target === undefined) {\n    } else {\n      if (target.indexOf(index) === -1 || HP[index] <= 0) {\n        return false;\n      } else return true;\n    }\n  };\n\n  const renderCenterPart = () => {\n    const unitsArrayUI: any = UnitsArray.map((unit, index) => {\n      if (index === 5) {\n        return (\n          <React.Fragment key={index}>\n            <UnitUI\n              HP={HP[index]}\n              currentUnit={unit}\n              currentIndex={index}\n              underAtack={isAtcaked(index, unit)}\n              isActive={queue[0]._id === index ? true : false}\n              onClick={() => {\n                handleClick(index);\n              }}\n              onDefenseClick={() => {\n                handleDefenseClick(index);\n              }}\n            />\n            <div className=\"border\" key={100}></div>\n          </React.Fragment>\n        );\n      }\n      return (\n        <UnitUI\n          HP={HP[index]}\n          key={index}\n          currentUnit={unit}\n          currentIndex={index}\n          isActive={queue[0]._id === index ? true : false}\n          underAtack={isAtcaked(index, unit)}\n          onClick={() => {\n            handleClick(index);\n          }}\n          onDefenseClick={() => {\n            handleDefenseClick(index);\n          }}\n        />\n      );\n    });\n\n    return <div className=\"battleField\">{unitsArrayUI}</div>;\n  };\n\n  return (\n    <div className=\"app\">\n      {/* <LeftPart\n        units={UnitsArray}\n        onClick={() => {\n          handleClick();\n        }}\n      /> */}\n      <div className=\"left-part\">{renderLeftPart()}</div>;\n      {/* <CenterPartV2 units={UnitsArray} /> */}\n      <div className=\"battleField\">{renderCenterPart()}</div>;\n      <RightPart />\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}